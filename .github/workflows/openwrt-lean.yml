#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-lean

on:
  #push:
  #  branches: 
  #    - master
  #schedule:
  #  - cron: 0 0 1 * *
  watch:
    types: started
    branches:
      - master
env:
  TZ: Asia/Shanghai
  
jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: 检查
        uses: actions/checkout@master

      - name: 初始化环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          ( sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential clang flex g++ gawk gcc-multilib gettext \
          git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev swig libpython3-dev aria2 jq subversion qemu-utils ccache rename libelf-dev
          sudo -E apt-get -qq purge azure-cli ghc* zulu* hhvm llvm* firefox powershell openjdk* dotnet* google* mysql* php* android*
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean ) &
          sudo timedatectl set-timezone "$TZ"               
      - name: 克隆源代码
        run: |
          git clone https://github.com/coolsnowwolf/lede
          cp .config ./lede/.config
          mv ./lede/* ./
          sed -i '$a src-git smpackage https://github.com/kenzok8/small-package' feeds.conf.default
        # git clone https://github.com/kenzok8/openwrt-packages.git package/openwrt-packages
      - name: 更新 & 安装 feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: 自定义配置
        run: |
          sed -i 's/192.168.1.1/10.1.1.110/g' package/base-files/files/bin/config_generate
          cp -f default-settings package/lean/default-settings/files/zzz-default-settings
          sed -i 's/v$date1/Nov/g' package/lean/default-settings/files/zzz-default-settings
          cp -f feeds/smpackage/diy/banner package/base-files/files/etc/banner
          sed -i 's/%D %V, %C/openwrt Nov by wei/g' package/base-files/files/etc/banner
          sed -i 's/luci-app-unblockmusic/luci-app-unblockneteasemusic/g' .config
          sed -i 's/luci-app-xlnetacc/luci-app-softethervpn/g' .config
          sed -i 's/luci-app-vsftpd=y/luci-app-vsftpd=m/g' .config
          sed -i 's/luci-app-nlbwmon=y/luci-app-nlbwmon=m/g' .config
          sed -i 's/luci-app-samba4=y/luci-app-samba4=m/g' .config
          sed -i 's/luci-app-wol=y/luci-app-wol=m/g' .config
          sed -i 's/luci-app-ddns=y/luci-app-ddns=m/g' .config
          sed -i 's/luci-app-accesscontrol=y/luci-app-accesscontrol=m/g' .config
        # sed -i "/CONFIG_TARGET_IMAGES_GZIP=y/a\CONFIG_TARGET_ROOTFS_TARGZ=y" .config
        # sed -i "/CONFIG_TARGET_ROOTFS_TARGZ=y/a\CONFIG_TARGET_ROOTFS_SQUASHFS=y" .config
        # cp -f feeds/smpackage/diy/index_x86.htm package/lean/autocore/files/x86/index.htm
        # cp -f feeds/smpackage/diy/${{matrix.target}}.config .config && make defconfig 
          
      - name: 自定义配置文件
        run: |
          make defconfig
      - name: 下载包文件
        run: |
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
      - name: 编译固件
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
      - name: 整理固件
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          #mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          #cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/ 
        # rm -rf ./artifact/
          #mkdir -p ./artifact/
          #find bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
          #find bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
          #find bin/targets/ -name "*rootfs*tar*" | xargs -i mv -f {} ./artifact/
          #find bin/packages/ -type d -name "x86_64" | xargs -i mv -f {} ./artifact/
          
     # - name : 上传固件目录
        #uses: actions/upload-artifact@master
        #with:
          #name: OpenWrt_firmware
          #path: ./artifact/
          
      #- name: Deliver buildinfo
        #uses: actions/upload-artifact@master
        #with:
          #name: OpenWrt_buildinfo
          #path: ./artifact/buildinfo/

      - name: 上传IPK包
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: 上传固件包
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
