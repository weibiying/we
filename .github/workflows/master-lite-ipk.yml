#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================
name: master-lite-ipk

on:
#  schedule:
#    - cron: 0 20 * * *
# push:
#   branches: 
#     - master
  watch:
    types: [started]
    branches: 
      - master

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest

    steps:
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/Lienol/openwrt
        REPO_BRANCH: dev-master
      run: | 
         git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
         git clone https://github.com/kenzok8/openwrt-packages openwrt/package/openwrt-packages                
         svn checkout https://github.com/Leo-Jo-My/openwrt18.06/trunk/package/my/luci-app-koolproxyR openwrt/package/my/luci-app-koolproxyR
         svn checkout https://github.com/Leo-Jo-My/openwrt18.06/trunk/package/my/luci-theme-tomato openwrt/package/my/luci-theme-tomato
         svn checkout https://github.com/Leo-Jo-My/openwrt18.06/trunk/package/my/luci-app-serverchan openwrt/package/my/luci-app-serverchan
         svn checkout https://github.com/coolsnowwolf/lede/trunk/package/network/services/samba36 openwrt/package/network/services/samba36   
       # mkdir -p openwrt/package/lean/parted && cp -i openwrt/package/lean/luci-app-diskman/Parted.Makefile openwrt/package/lean/parted/Makefile
       # svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-cifs-mount openwrt/package/my/luci-app-cifs-mount
       # git clone https://github.com/lisaac/luci-app-diskman openwrt/package/lean/luci-app-diskman
           
    - name: Clone Config
      env: 
          REPO_URL: https://github.com/weiwuji1/we
          REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH we
    
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a
    
    - name: Diy menu
      run: |
          cd openwrt
          sed -i 's#192.168.1.1#10.1.1.11#g' package/base-files/files/bin/config_generate #定制默认IP
          sed -i 's/\"services\"/\"control\"/g' `grep \"services\" -rl feeds/luci/applications/luci-app-nft-qos`
          sed -i 's/\"services\"/\"system\"/g' `grep \"services\" -rl feeds/luci/applications/luci-app-ttyd`                   
          sed -i 's/\"network\"/\"control\"/g' `grep \"network\" -rl package/openwrt-packages/luci-app-eqos`
          sed -i "s/services/vpn/g" `grep services -rl package/openwrt-packages/luci-app-ssr-plus` 
          sed -i 's/\"network\"/\"control\"/g' `grep \"network\" -rl package/OpenAppFilter/luci-app-oaf`
          sed -i "s/services/vpn/g" `grep services -rl package/openwrt-packages/luci-app-openclash`      
        # sed -i 's/\"services\"/\"control\"/g' feeds/luci/applications/luci-app-nft-qos/luasrc/controller/nft-qos.lua
        # sed -i 's/\"services\"/\"system\"/g' feeds/luci/applications/luci-app-ttyd/luasrc/controller/ttyd.lua                   
        # sed -i 's/\"network\"/\"control\"/g' package/openwrt-packages/luci-app-eqos/luasrc/controller/eqos.lua
        # sed -i 's/\"services\"/\"vpn\"/g' package/openwrt-packages/luci-app-ssr-plus/luasrc/controller/shadowsocksr.lua 
        # sed -i 's/\"network\"/\"control\"/g' package/OpenAppFilter/luci-app-oaf/luasrc/controller/appfilter.lua
        # sed -i 's/\"services\"/\"vpn\"/g' package/openwrt-packages/luci-app-openclash/files/usr/lib/lua/luci/controller/openclash.lua      
        # echo "sed -i 's/\"services\"/\"vpn\"/g' /usr/lib/lua/luci/controller/openclash.lua" >> openwrt/package/default-settings/files/zzz-default-settings
        # echo "sed -i 's/\"services\"/\"vpn\"/g' /usr/lib/lua/luci/controller/shadowsocksr.lua" >> openwrt/package/default-settings/files/zzz-default-settings
        # echo "sed -i 's/\"network\"/\"control\"/g' /usr/lib/lua/luci/controller/eqos.lua" >> openwrt/package/default-settings/files/zzz-default-settings
        # echo "sed -i 's/\"qos\"/\"control\"/g' /usr/lib/lua/luci/controller/nft-qos.lua" >> openwrt/package/default-settings/files/zzz-default-settings
        # echo "sed -i 's/\"services\"/\"system\"/g' /usr/lib/lua/luci/controller/ttyd.lua" >> openwrt/package/default-settings/files/zzz-default-settings
        # sed -i 's#page = entry({"admin", "network"#page = entry({"admin", "control"#g' openwrt/package/OpenAppFilter/luci-app-oaf/luasrc/controller/appfilter.lua #更换应用控制菜单
        
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a
          
    
    - name: Custom configure file
      run: |
          cd openwrt
          rm -f .config
          cp ../we/master-lite .config
               
          
    - name: Make Defconfig
      run: |
          cd openwrt
          make defconfig
    - name: SSH connection to Actions
      env:
        SSH_ACTIONS: false
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Make download
      run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          rm -rf build_dir/target-x86_64_musl/Python-2.7.17
    - name: Multi-thread compile
      run: |
          cd openwrt
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
    - name: Single-thread compile
      if: failure()
      run: |
          cd openwrt
          make -j1 V=s
    - name: Assemble artifact
      run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find openwrt/bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/
          find openwrt/bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
          find openwrt/bin/packages/ -type d -name "x86_64" | xargs -i mv -f {} ./artifact/

    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt firmware
        path: ./artifact/
